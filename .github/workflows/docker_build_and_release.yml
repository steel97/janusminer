name: Docker Build and Release

on:
  push:
    branches:
      - tests  # or the name of your default branch

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Get branch name
      id: get_branch_name
      run: |
        echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
    
    - name: Get version
      id: get_version
      run: |
        echo "VERSION=$(grep 'version :' meson.build | cut -d "'" -f 2)" >> $GITHUB_ENV

    - name: Get commit hash
      id: get_commit_hash
      run: |
        echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Check if commit is tagged with release
      id: check_tag
      run: |
        echo "IS_RELEASE=$(if git describe --exact-match --tags HEAD 2>/dev/null | grep -q '^release'; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_ENV

    - name: Docker Build Windows
      run: DOCKER_BUILDKIT=1 docker build . -f Dockerfiles/Dockerfile_Windows --output ./build/Windows
        
    - name: Upload Windows build
      id: upload-docker-build-output-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/Windows/wart-miner.exe
        asset_name: janusminer-windows.exe
        asset_content_type: application/octet-stream
